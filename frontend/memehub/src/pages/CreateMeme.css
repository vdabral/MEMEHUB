/* Additional styles for CreateMeme page */

/* Text overlay drag effect */
.text-overlay {
  cursor: move;
  transition: filter 0.2s ease, transform 0.2s ease, background-color 0.2s ease;
  will-change: transform;
  border-radius: 4px;
  display: inline-block;
  line-height: 1.25;
  padding: 6px 8px;
  max-width: 90% !important;
  text-align: center;
  box-sizing: border-box;
  text-overflow: ellipsis;
  text-shadow: 0px 1px 2px rgba(0,0,0,0.8), 0px -1px 2px rgba(0,0,0,0.8), 1px 0px 2px rgba(0,0,0,0.8), -1px 0px 2px rgba(0,0,0,0.8);
  backdrop-filter: blur(3px);
}

.text-overlay:hover {
  filter: drop-shadow(0 0 5px rgba(139, 92, 246, 0.5));
  z-index: 5 !important;
  background-color: rgba(255, 255, 255, 0.15);
}

.text-overlay.dragging {
  filter: drop-shadow(0 0 8px rgba(139, 92, 246, 0.7));
  z-index: 10 !important;
  background-color: rgba(255, 255, 255, 0.25);
  outline: 1px dashed rgba(139, 92, 246, 0.7);
  transform: scale(1.05);
  animation: pulse-border 1.5s infinite;
}

@keyframes pulse-border {
  0%, 100% { 
    outline-color: rgba(139, 92, 246, 0.7);
    outline-width: 1px;
  }
  50% { 
    outline-color: rgba(139, 92, 246, 1);
    outline-width: 2px;
  }
}

/* Text visibility enhancement */
.enhanced-text-shadow {
  text-shadow: 
    2px 2px 0 rgba(0,0,0,0.8), 
    -2px -2px 0 rgba(0,0,0,0.8), 
    2px -2px 0 rgba(0,0,0,0.8), 
    -2px 2px 0 rgba(0,0,0,0.8),
    0px 2px 0 rgba(0,0,0,0.8),
    0px -2px 0 rgba(0,0,0,0.8),
    2px 0px 0 rgba(0,0,0,0.8),
    -2px 0px 0 rgba(0,0,0,0.8);
}

/* Image container */
.meme-preview-container {
  background-image: 
    linear-gradient(45deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%), 
    linear-gradient(-45deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%), 
    linear-gradient(45deg, transparent 75%, rgba(0, 0, 0, 0.1) 75%), 
    linear-gradient(-45deg, transparent 75%, rgba(0, 0, 0, 0.1) 75%);
  background-size: 20px 20px;
  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  transition: border-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  min-height: 320px;
  aspect-ratio: 16/9;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
}

.meme-preview-container img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  display: block;
  transition: transform 0.3s ease;
}

.meme-preview-container.active-drag {
  border-color: rgba(139, 92, 246, 0.8) !important;
  box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.2), 0 8px 20px rgba(139, 92, 246, 0.15);
  transform: scale(1.01);
}

/* Position guide overlay for text positioning */
.position-guide {
  position: absolute;
  inset: 0;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.position-guide-cell {
  border: 1px dashed rgba(255, 255, 255, 0.2);
}

.meme-preview-container:hover .position-guide {
  opacity: 0.1;
}

.meme-preview-container.active-drag .position-guide {
  opacity: 0.3;
}

/* Input field focus effects */
.enhanced-input {
  transition: all 0.3s ease;
}

.enhanced-input:focus {
  border-color: rgb(139, 92, 246);
  box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.2);
}

/* Skeleton loading animation override */
.custom-skeleton {
  --base-color: #f3f0ff;
  --highlight-color: #ffffff;
}

/* Custom scrollbar for template list */
.template-scroll::-webkit-scrollbar {
  width: 8px;
}

.template-scroll::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.template-scroll::-webkit-scrollbar-thumb {
  background: rgba(139, 92, 246, 0.3);
  border-radius: 4px;
}

.template-scroll::-webkit-scrollbar-thumb:hover {
  background: rgba(139, 92, 246, 0.5);
}

/* Card hover effects */
.card-hover-effect {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card-hover-effect:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* Button ripple effect */
.meme-button {
  position: relative;
  overflow: hidden;
}

.meme-button::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.6);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%, -50%);
  transform-origin: 50% 50%;
}

.meme-button:focus:not(:active)::after {
  animation: ripple 1s ease-out;
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  20% {
    transform: scale(25, 25);
    opacity: 0.3;
  }
  100% {
    opacity: 0;
    transform: scale(50, 50);
  }
}

/* Drag handle for text overlays */
.drag-handle {
  position: absolute;
  top: -8px;
  right: -8px;
  width: 16px;
  height: 16px;
  background-color: rgb(139, 92, 246);
  border-radius: 50%;
  cursor: grab;
  opacity: 0;
  transition: opacity 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.text-overlay:hover .drag-handle {
  opacity: 1;
}

.text-overlay .drag-handle:active {
  cursor: grabbing;
}

/* Loading state placeholders */
.placeholder-pulse {
  animation: pulse-bg 2s infinite ease-in-out;
}

@keyframes pulse-bg {
  0%, 100% { 
    background-color: rgba(139, 92, 246, 0.1); 
  }
  50% { 
    background-color: rgba(139, 92, 246, 0.2); 
  }
}

/* Template hover effect */
.template-item {
  transition: all 0.3s ease;
}

.template-item:hover {
  transform: translateY(-3px) scale(1.02);
  box-shadow: 0 10px 25px -5px rgba(139, 92, 246, 0.25);
  border-color: rgba(139, 92, 246, 0.5);
}

/* Tooltip styles */
.tooltip {
  position: relative;
}

.tooltip::before {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  margin-bottom: 5px;
  padding: 5px 10px;
  border-radius: 10px;
  background: rgba(0, 0, 0, 0.8);
  color: white;
  text-align: center;
  font-size: 12px;
  line-height: 1.2;
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
  transition: all 0.2s ease;
  z-index: 50;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
}

.tooltip:hover::before {
  opacity: 1;
  transform: translateX(-50%) translateY(-2px);
}
